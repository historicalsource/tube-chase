	.SBTTL TCDEF
	.RADIX 16
;FILE TCDEF - TUBE CHASE DEFINITIONS
	.SBTTL	PAGE 0 ALLOCATION & GLOBLS
SPLITS	=0			;SET TO 1 TO INCLUDE SPLIT LOGIC
NOOBJTS	=7			;# OF SQUARES ALLOWEDD
;
;PAGE 0:
;

	.ASECT
	.=0
	.BLKB 1			;DON'T USE 0
READY:	.BLKB 1			;80=INTERRUPT DATA OK
STEER:	.BLKB 1			;CURRENT STEERING VALUE
UPD:	.BLKB 1			;UP/DOWN STEERING
VELL:	.BLKB 1			;LSB VELOCITY
VELH:	.BLKB 1			;MSB VELOCITY
NUMB1:	.BLKB 1			;ADJUSTED VELOCITY TO DECIMAL
NUMB2:	.BLKB 1
NUMB3:	.BLKB 1
R0:	.BLKB 1			;SOME REGISTERS
R1:	.BLKB 1
R2:	.BLKB 1
R3:	.BLKB 1
R4:	.BLKB 1
R5:	.BLKB 1
R6:	.BLKB 1
TRKADL:.BLKB 1			;ADDRESS OF TRACK TABLE
TRKADH:.BLKB 1
XSVE:	.BLKB 2			;HOLD REGISTER
ZCNTRL:	.BLKB NOOBJTS		;OBJECT CONTROL BYTE, LEFT BOUNDARY
				;BIT 7=ACTIVE
				;BIT 3=SPLIT SECTION START
				;BIT 2=FIRST SPLIT
				;BITS 0 & 1=BITS 16 & 17 OR H POSITION
ZCNTRR:	.BLKB NOOBJTS		;OBJECT CONTROL BYTE, RIGHT BOUNDARY
				;BIT 7=ACTIVE
				;BITS 0 & 1=BITS 16 & 17 OF H POSITION
				;OBJECT OFF SCREEN IF EITHETR BIT 1 OR 0 IS NOT 0
ZXAXLL:	.BLKB <NOOBJTS>*2	;XAXIS POSITION LEFT SIDE (LSB)
ZXAXLH	=ZXAXLL+NOOBJTS		;XAXIS POSITION LEFT (MSB)
ZXAXRL:	.BLKB <NOOBJTS>*2	;XAXIS POSITION RIGHT SIDE (LSB)
ZXAXRH	=ZXAXRL+NOOBJTS		;XAXIS POSITIONS RIGHT (MSB)
ZYAXL:	.BLKB <NOOBJTS>*2	;YAXIS POSITIONS, BOTH SIDES (LSB)
ZYAXH	=ZYAXL+NOOBJTS		;MSB
	.IF NE,SPLITS
;SPLIT SECTION POSITIONS
SXAXLL:	.BLKB <NOOBJTS>*2
SXAXLH	=SXAXLL+NOOBJTS
SXAXRL:	.BLKB <NOOBJTS>*2
SXAXRH	=SXAXRL+NOOBJTS
	.ENDC
TLIMIT:	.BLKB 1			;DYNAMIC SQUARE LIMITS
BLIMIT:	.BLKB 1
LLIMIT:	.BLKB 1
RLIMIT:	.BLKB 1
	.IF NE,SPLITS
OVERL:	.BLKB NOOBJTS
OVERR:	.BLKB NOOBJTS
	.ENDC
COLUR:	.BLKB NOOBJTS		;COLOR OF SQUARE
UPDNL:	.BLKB NOOBJTS		;UP/DOWN
UPDNH:	.BLKB NOOBJTS		;UP/DOWN MSB
VCENT:	.BLKB 2			;UP/DOWN ORGEN (SCREEN ON SIDE)
VCS:	.BLKB 1			;COEFFICIENT OF SHARPNESS FOR UP/DOWN
VCRNL:	.BLKB 1			;UP/DOWN DISTANCE COVERED
VCRNH:	.BLKB 1		
VDIST:	.BLKB 1			;UP/DOWN DISTANCE REQUIRED
VRVL:	.BLKB 1			;UP/DOWN TURN COEFFICIENT
VRVH:	.BLKB 1	
VSTCL:	.BLKB 1
VSTCH:	.BLKB 1			;SPLIT SPEED CORRECTION	
PYA:	.BLKB 1			;ADJUSTED Y POSITION
STCL:	.BLKB 1			;STEERING "CONSTANT" (VEL*STEER)
STCH:	.BLKB 1			;MSB OF ABOVE
PYAVL:	.BLKB 1			;ADJUSTED POSITION *VELOCITY
PYAVH:	.BLKB 1			;MSB OF ABOVE
VELKL:	.BLKB 1			;VELOCITY ADJUSTED BY K (VEL*K)
VELKH:	.BLKB 1			;MSB OF ABOVE
PRODL:	.BLKB 1			;PROJECT TERMS USED BY MULTIPLY ROUTINE
PRODH:	.BLKB 1
ORL:	.BLKB 1			;ORIGIN LSB
ORH:	.BLKB 1			;ORIGIN MIDDLE
ORVH:	.BLKB 1			;MSB OF ORIGIN
TURNL:	.BLKB 1			;TURN DISTANCE COVERED
TURNH:	.BLKB 1
DIST:	.BLKB 1			;TURN DISTANCE REQUIRED BY TRACK
SKILL:	.BLKB 1			;INDEX USED TO GET DATA FROM TRACK TABLE (SKILL LEVEL)
CS:	.BLKB 1			;COEFFICIENT OF SHARPNESS OF TURN
OBJTML:	.BLKB 1			;DISTANCE DRIVEN BETWEEN PYLONS
OBJTMH:	.BLKB 1
CRVL:	.BLKB 1			;TURNING COEFFICIENT (CS*VELOCITY)
CRVH:	.BLKB 1
PYAVKL:	.BLKB 1			;PYA*KP*VELOCITY
PYAVKH:	.BLKB 1
OUTPTR:	.BLKB 2			;BAR GRAPH OUTPUT
;MOTION OBJECT RAM CELLS
SPTR:	.BLKB 2			;PICTURE SOURCE PTR
DPTR:	.BLKB 2			;PIC OUTPUT PTR
DPTR2:	.BLKB 2			;SYMMETRICAL OUTPUT POINTER
ULCT:	.BLKB 1			;LINE COUNT
SCNT:	.BLKB 1			;SEGMENT COUNT
RCNT:	.BLKB 1			;REPEAT COUNT
OBSPDL:	.BLKB 1			;LOW BYTE OF OBJECT SPEED
OBSPD:	.BLKB 1			;OBJECT 'TRUE' SPEED
DISTANCE:.BLKB 1		;DISTANCE FROM YOU
				;0=INFINITY,50=HORIZON,0F0=VIEN POINT
OBJST:	.BLKB 1			;MOTION OBJECT STATUS & PICTURE SEQUENCE #
				;BIT:7=ACTIVE,6=EXPLODING,5=PERSUIT,4=ACCELERATING (ON)
				;3=ALREADY PULLED AWAY. DON'T OVER ACCEL
				;2=DON'T AFFECT SPEED
				;1=NOT USED
				;0=SHOT (FROM SHIP,NOT OVER HEAD)
OBJPIC:	.BLKB 1			;PICTURE INDEX POINTER
;OBJNUM:.BLBK 1			;NUMBER OF PIC
;THE ABOVE IS IN PAGE 2
OBJV:	.BLKB 1			;TARGET VERTICAL
OBJH:	.BLKB 1			;TARGET HORIZ
;EXTRA VARIABLES FOR THE MULTIPLY ROUTINE
MLTPLR:	.BLKB 1
MLTCDL:	.BLKB 1
MLTCDH:	.BLKB 1
RESULT:	.BLKB 2

ZHI	=.-1			;CLEAR AREA FOR ATTRACT

SYNC:	.BLKB 1			;INTERRUPT & SYNC CONTROL
STATE:	.BLKB 1			;80=ATTRACT
				;40=100K BONUS REACHED
				;08=EX PLAY SCORE REACHED
				;02=HIT WALL
				;10=EX PLAY ALREADY, 01=CRASH
FRAME:	.BLKB 1
FRAMC:	.BLKB 1			;TOTAL FRAME COUNT
QUOT:	.BLKB 2
INDEX:	.BLKB 1
LASTT:	.BLKB 2			;STATUS
LASERD:	.BLKB 2			;DISTANCE
LASERH:	.BLKB 2			;X POSITION START,END (SCREEN ON SIDE)
LASERV:	.BLKB 2			;Y POSITION START,END
SCOREH:	.BLKB 1			;PLAYERS SCORE (BCD)
SCOREM:	.BLKB 1
SCOREL:	.BLKB 1			;VERY BIG SCORE!
ZHI2	=.-1			;TOP OF AREA TO BE CLEARED
$INTCT:	.BLKB 1
$VBLANK:	.BLKB 1
$$CRDT:	.BLKB 1			;ACCRUED CREDIT
$CMODE:	.BLKB 1			;COIN MODE
$CNSTT:	.BLKB 3			;STATUS TIMERS
$CNCT:	.BLKB 3			;COIN COUNTERS
$PSTSL:	.BLKB 3			;POST SLAM TIMER
$LMTIM:	.BLKB 1			;POST SLAM TIME
$CCTIM:	.BLKB 3			;MECH COUNTERS
$BCCNT:	.BLKB 1			;BONUS ADDER FLAG
$BC:	.BLKB 1
;
;COIN ROUTINE EQUATES FOR CONDITIONAL ASSEMBLIES
;
INCLUDE	=1
RTS	=0
SLAM	=0
BONADD	=1
POTVAL:	.BLKB 2			;LEFT/RIGHT VALUE
				;UP/DOWN VALUE
RANGE:	.BLKB 2			;RANGE OF POT
ACTIVE:	.BLKB 2			;ACTIVITY COUNTER
LOW:	.BLKB 2			;LOW END
PDATA:	.BLKB 2			;DATA READ AT INTERRUPTS FROM POTS
TOPS:	.BLKB 1			;TOP SPEED
;BUFFERS FOR MOTION OBJECT OUTPUT PARAMETERS
MOBSTB:	.BLKB 1			;START LINE
MOBJVB:	.BLKB 1			;VERTICAL (NORMAL)
MOBJHB:	.BLKB 1			;HORIZ (NORMAL)
MOBVSB:	.BLKB 1			;V-STOP (NORMAL)
;SHELL 0 BUFFERS
SHLHB:	.BLKB 1			;SHELL 0 H BUFFER
SHL0VB:	.BLKB 1			;V START BUFFER
SL0VSB:	.BLKB 1			;V STOP BUFFER
SHTBACK:.BLKB 1			;SHOOT BACK FLAG
ASCI:	.BLKB 6			;BCD TO ASCII OUTPUT REGISTERS
SHLDHT:	.BLKB 1			;SHEILD HIT COUNTER
SHICOL:	.BLKB 1			;SHITELD HI COLOR
HITS:	.BLKB 2			;HITS!
OPTION:	.BLKB 1			;OPTION SWITCHES FROM POKEY 0
HULL:	.BLKB 2			;HULL TEMP
INTTEM:	.BLKB 1			;TEMP INITIAL BUFFER
SECIND:	.BLKB 2			;SECURITY INDIRECT PTR
LANG:	.BLKB 2			;LANGUAGE
TEMP1:	.BLKB 2			;TEMP REGS
TEMP4:	.BLKB 2
TEMP5:	.BLKB 2
	.ASECT
	.=100
	PAGE1=.
SSTAT:	.BLKB 1			;STATUS - IS SOUND ON
SOUNDN:	.BLKB 1			;SOUND # IN PROGRESS
POINT:	.BLKB 6			;POINTER OF OFFSETS IN DATA.0=IDEL
CURRENT:.BLKB 6			;OUTPUT VALUE
FRAMES:	.BLKB 6			;FRAMES UNTIL NEXT CHANGE
COUNT:	.BLKB 6			;TOTAL # OF CHANGES
LOCKOUT:	.BLKB 1		;INTERRUPT LOCK
	.SBTTL BUFFER SPACE
	.=200
PAGE2	=.			;PAGE 2
;BUFFER FOR LINES - 32 LINES MAX FOR SQUARES (2 LINES PER SQUARE, 16 SQUARES)
VSTR:	.BLKB 20		;VSTART FOR LINES OF TUBE
VSTOP:	.BLKB 20		;VSTOP FOR LINES OF TUBE
HPOST:	.BLKB 20		;POSITION OF LINES, H.
ECOLOR:	.BLKB 20		;COLOR BUFFER
LASTC:	.BLKB 1			;LAST COLOR OUTPUT
COLARY:	.BLKB 10		;COLOR ARRAY, STORES TO COLRAM(D7-D4=SHADE,D3-D0=COLOR)
				;ON VBLANK
	.REPT 0
COLOR RAM ASSIGNMENTS
	
LOCATION			USE
	0		BLANKING,BOROER,
	1		MOT OBJ (10) (D), SHELL (01)
	2		MOT OBJ (01) (G), SHELL (10)
	3		MOT OBJ (00) (W)
	4		ALPHA & SHELL (11)
	5		HILIGHT 1
	6		HILIGHT 2
	8-E		LINES (AS NORMAL) BACKGROUND
	F		HILIGHT 3
	.ENDR
SMALL:	.BLKB 1			;SMALLS (LAST) ELLIPSE OUT
MOVS0:	.BLKB 1			;VSTRETCH HOLD FOR MOITIOB OBJECTS
MOVS1:	.BLKB 1
	.IF NE,SPLITS
SPCONT:	.BLKB 1			;SPLIT SECTION COUNT
	.ENDC
NOT:	.BLKB 1			;DISTANCE BETWEEN RINGS
HOFF:	.BLKB 1
VOFF:	.BLKB 1
	.IF NE,SPLITS
WHICH:	.BLKB 1			;+=LEFT SPILT,-=RIGHT
	.ENDC
LASTP:	.BLKB 1			;LAST PICTURE OUTPUT
UPDOWN:	.BLKB 1			;FLIP BIT ON PICTURE
DISDLY:	.BLKB 1			;OBJECT OFF IN THE DISTANCE TIMER
				;IF -, TRY TO START A NEW OBJECT
				;IF 0, NEVER HERE BEFORE
				;IF +, HOLD AT DISTANCE FOR A WHILE
VSREG:	.BLKB 1			;VSTOP (????) REGISTER
LASTIM:	.BLKB 1			;SHOTS/PER "SECOND"
HOTDLY:	.BLKB 1			;OVER HEAT DELAY STATUS INDICATOR
HFLOW:	.BLKB 1			;OVERFLOW FOR MOTION OBJECT OUTPUT
SCRTIM:	.BLKB 1			;DISPLAY SCORE TIME
SCRREG:	.BLKB 3			;REGISTER HOLD FOR DISPLAY
OUT202:	.BLKB 1			;OUTPUT REGISTER FOR 2800
OBJHT:	.BLKB 1			;H POSITION TO MOVE TOWARD
OBJVT:	.BLKB 1			;SAME FOR V
CRSHC:	.BLKB 1			;WALL CRASH COUNTER (FOR USE IN DECING TOP SPEED)
PTWAIT:	.BLKB 1			;POT ROUTINE DEACTIVE
DIR:  	.BLKB 1		;DIRECTION OF COLOR CHANGE (- IS DOWN)
DIR2:	.BLKB 1		;DIR CHANGE FOR COLOR OF SHIP AND 'TUBE CHASE'
OKOUT:	.BLKB 1		;OK TO OUTPUT FLAG
LSTCOL:	.BLKB 1		;BACKROUND COLOR
NXTPTR:	.BLKB 1			;POINTER INTO COLOR TABLE
NXTCLR:	.BLKB 1			;NEXT COLOR OF CIRCLE
NXTLAS:	.BLKB 1			;NEXT LASER TO SHOOT
NEWONE:	.BLKB 1
SMOKE:	.BLKB 1			;WALL HIT SOUND TIMER
SMOK2:	.BLKB 1			;EXPLOSION TIMER
ITEMP:	.BLKB 2		;TEMP SPACE FOR INTERRUPT
HILIGHT:.BLKB 1			;OR'ED W/CHAR OUTPUT
MOBJHZ:	.BLKB 1			;ATTRACT REGISTER
FLAST:	.BLKB 1			;FIRE SWITCH DEBOUNCE
LIVES:	.BLKB 1			;LIVES
				;D7-ACTIVE
				;D6-1=SHELL,0=SMALL SHIP (WHEN D7=1)
TIMEE:	.BLKB 1			;TIME ENEMY SHIP IS VISIBLE
OVERHD:	.BLKB 1			;DELAY TIMER FOR SHOOTHING A SHELL OVERHEAD
M1:	.BLKB 1			;TEMP USED BY 'MOTOUT' ROUTINE
M2:	.BLKB 1			;TEMP USED BY 'MOTOUT' ROUTINE
SHIELD:	.BLKB 1			;BUTTON REG
SHIELE:	.BLKB 2			;ENERGY LEFT
OBJNUM:	.BLKB 1			;WHICH PICTURE
STDELAY:.BLKB 1			;DELAY AFTER BEING HIT
LIFETM:	.BLKB 1			;LIFE TIME SINCE LAST COLLISION
BONMUL:	.BLKB 1			;BONUS MULTIPLER
SHTWT:	.BLKB 1			;SHOT DELAY START OF GAME & SHOOT ALWAYS(80)
BONSND:	.BLKB 1			;BONUS LIFE SOUND REG
BONLVL:	.BLKB 1			;BONUS LIFE THOUSAND LEVEL
CH4BUF:	.BLKB 2		;CHANNEL 4 BUFFER
	.=300
	.SBTTL	HIGH SCORE & INITIALS AREA
HSCORE:	.BLKB 3*5		;HIGH SCORES, TOP 5
UPDFLG:	.BLKB 1			;UPDATE FLAG
UPDINT:	.BLKB 1			;INDEX POINTER
INITL:	.BLKB 3*5		;3 INITIALS EACH ENTRY
ATTIM:	.BLKB 1		;ATTRACT MESSAGE OUTPUT TIMER
SHDB:	.BLKB 1			;CHANGE OF STATE REGISTER FOR INITIAL INPUT

SECBIT:	.BLKB 10		;SKIP SOME SPACE
	.BLKB 1			;SECURITY FLAG FOR MESSAGE ROUTINE (80=WRITE)
SECURE:	.BLKB 8			;SECURITY AREA
	.PAGE
	.SBTTL	GAME CONSTANTS
;
;CONSTANTS
;
;NOOBJTS	=7		;# OF SQUARES ALLOWED (DEFINED AT 0 PAGE START)
PYMIN	=50			;HORIZON
XMIN	=18			;COMPUTATION LEFT LIMIT OF "SCREEN"
CRLFT	=25			;COMPUTATION LEFT CRASH POINT
XMAX	=0E8			;COMPUTATION RIGHT LIMIT
CRRHT	=0E8			;CRASH POINT RIGHT
BOTTOM	=0F0			;BOTTOM OF PLAYFIELD (WHEN BIT 9 SET)
DNLMT	=20			;TOP OF SCEEN LIMIT FOR UP/DOWN MOTION
UPLMT	=0E0			;BOTTOM OF SCREEN LIMIT
RLMT	=0E8			;RIGHT MOTION LIMIT
LLMT	=25			;LEFT MOTION LIMIT
VCENTER	=80			;UP DOWN CENTER (SCREEN ON SIDE, BOTTOM=LEFT)
GTMPL	=ALPHA+0C1
SCPL	=ALPHA+0D6
HTPL	=0CE			;HITS OUTPUT LOCATION
ORGIN	=8A			;CENTER LEFT/RIGHT (SCREEN ON SIDE)
STKPTR	=0FF			;SET TO TOP OF PAGE 1
LASPIC	=0			;FIRST (LARGEST) OF 4 LASER PICTURES
HHITW	=10			;HORIZ HIT WINDOW
VHITW	=10			;VERTICAL HIT WINDOW
DHITW	=10			;DISTANCE HIT WINDOW
GRPIC0	=21			;BAR GRAPH DISPLAY CHAR (FIRST OF 8)
HULPL	=ALPHA+08B		;HULL TEMP INDICATOR
LASPL	=ALPHA+4B		;LOCATION OF LASER TEMP INDICATOR
SHIPL	=ALPHA+06B
ATCON	=8			;ATTRACT/HIGH SCORE TABLE TIME CONSTANT
HILTC	=0			;HILIGHT COLOR RAM LOCATION
MOTW	=03			;MOTION OBJ COLOR RAM LOCATION FOR W
MOTG	=02			;MOTION OBJ COLOR RAM LOCATION FOR G
MOTD	=01			;MOTION OBJ COLOR RAM LOCATION FOR D
MOTC	=00			;MOTION OJB COLOR RAM LOCATION FOR C
BKLCOL	=07			;BACKROUND COLOR RAM LOCATION
ALPHC	=04			;ALPHA COLOR LOCATION
SQUARC	=8			;BASE OF COLOR RAM FOR LINES USED FOR SQUARES
HLT1	=40			;CONSTANTS TO OR INTO CHAR
HLT2	=80
HLT3	=0C0
HILT1	=05			;RAM LOCATION HILIGHT (01)
HILT2	=06			;RAM LOCATION HILIGHT (10)
HILT3	=0F			;RAM LOCATION HILIGHT (11)
SHL11	=4
WHITE	=0			;COLOR EQUATES
PURPLE	=1
BLUE	=2
LTBLUE	=3
GREEN	=4
YELLOW	=5
RED	=6
BLACK	=7
ORANGE	=8
CYAN	=9
YELGRN	=0A
WHTBLU	=0B
YELORN	=0C
BROWN	=0D
RED1	=0E
BLACK1	=0F
REDYLC	=RED ? YELLOW		;RED/YELLOW CHANGE EOR CONSTANT
LIMITC	=2F			;LIMIT CHAR FOR BAR GRAPH
CIRP	=2E			;CIRCLE P
CIRC	=2D			;CIRCLE C
AT19	=2B			;1981
AT81	=2C
SECOFF	=5E			;OFFSET TO NOP,RTS IN SECURE AREA
LVL1	=6			;# OF HIB WHERE GAME GETS HARDER (1=SHOOT BACK)
LVL2	=12
LVL3	=18
LVL4	=24
HALF	=02A			;1 HALF CHAR
	.PAGE
	.SBTTL HARDWARE ADDRESSES
;64 LINES
LINEV	=1403			;LINES VERT START (TO 163D)
LINEVS	=1483			;LINES VERT STOP
				;VERTICAL (NORMAL SCREEN) V=0=BOTTOM
				;(SCREEN ON SIDE) V=00=LEFT, 0FF=RIGHT
LINEH	=1083			;LINES HORIZ START
				;HORIZ (NORMAL SCREEN) 0=LEFT
				;(SCREEN ON SIDE) 0=TOP, 0FF=BOTTOM
LINEC	=1283			;LINE COLOR, 4 BITS D0-D3
COLRAM	=1600			;COLOR RAM, BITS ABOVE
				;ARE INDEX TO THIS TABLE
				;D7-D4 SHADE
				;D3-D0 COLOR
LINESH	=1203			;LINES SLOPE4 BITS D0-D3 (D3 IS SIGN BIT)
				;SLOPE IS A "TANGENT #, IE: 1=45 DEG.

SHEL0H	=1800			;SHELL H POSITION (NORMAL SCREEN)
SHEL1H	=1A00
SHL0V	=1400			;SHELL V START (NORMAL SCREEN)
SHL1V	=1401
SHL0VS	=1480			;SHELL VSTOP (NORMAL SCREEN)
SHL1VS	=1481
SHL0ST	=1200			;SHELL VSTRETCH (LIKE MST OBJ STRETCH)
SHL1ST	=1201
SHL0PC	=1280			;SHELL PICTURE CODE (D3-D0)
SHL1PC	=1281			;(PROM LIKE SPRINT)
	.SBTTL MOTION OBJECT, EQUATES & CONSTANTS

MOBJV	=1C00			;V POSITION (SCREEN ON SIDE)(TARGET H POSITION-SCREEN NORMAL)
MOBVS	=1482			;V STOP FOR MOTION OBJ (NORMAL SCREEN)
MOBJH	=1402			;H POSITION (SCREEN ON SIDE)(VSTART-NORMAL SCREEN)
MOBST	=1082			;STARTING LINE FOR RAM SCAN ON MOBJ
MOTT	=2C00			;MOTION OBJ RAM (00-0F NOT USED BYT CLEARED)
VSTRLO	=1202			;VERT (SCREEN ON SIDE) STRETCH MOJ OBJ
;THE MOTION OBJECT IS SPECIFIED BY AN ARRAY, LOGICALLY 16 X 64. EACH
;OF THE 16 BYTES IN A ROW SPECIFIES A COLOR (D7-D5) & A LENGTH
;(D4-D0); UP TO 8 COLORS SELECTED OUT OF 1200-1207 (COLRAM).
WRAM	=100			;100-300 WORKING RAM
ALPHA	=1E00			;ALPHA NUMERICS (D7 & D6 ARE 2 BITS OF HILIGHT)
LINEBASE=0			;FIRST AVAILABLE LINE FOR USE
BACKROUND=LINEBASE		;LINE (SET TO COLOR 02) FOR BACKROUND
SQUARE	=LINEBASE+1		;LINES FOR SQUARES
MOBSC0	=1080			;SCAN ROM START FOR MOBJ
MOBSC1	=1081	
	.PAGE
	.SBTTL INPUTS
;ALL LOW TRUE UNLESS INDICATED
PROG	=5000
STARTS	=2006			;START SWITCH ,D7
TEST	=2002			;TEST, D7
FIRE	=2001			;FIRE, D7
SHLD	=2005			;GAS PEDAL,D7
$LAM	=2000			;SLAM, D7
$LMBIT	=80			;D7=SLAM
$COINA	=2002			;D7=COIN CENTER
				;+1,D7=COIN RIGHT
VBLANK	=2007			;VBLANK (D7=1 IS VBLANK)
	.SBTTL	OUTPUTS
POKEY	=4000			;POKEY BASE ADDRESS
POKEY1	=3000			;POKEY1 BASE ADDRESS
STLED	=2800			;1=OFF, 0=ON (D6)
COINCNT	=2800			;1=ACTIVE, 0=OFF
;DO=RIGHT CNTR
;D1=CENTER CNTR
;D2=LEFT CNTR
COVER0	=2800			;D4 0=DISABLE, 1=COVER SCREEN
COVER1	=2800			;D3 0=DISABLE, 1=COVER SCREEN
WTCHDG	=2000			;WATCH DOG
INTACK	=2400			;ACKNOWLEDGE INTERRUPTS
OPTN0	=2400			;4 BITS, TOP NIBBLE
OPTN1	=ALLPT1			;8 OPTION BITS, MUST USE POKEY
				;COIN MODE OPTION BITS
OPTN2	=ALLPOT			;5 OPTIONS, BITS 3-7
				;BITS 3 & 4 =# OF LIVES SELECT
;OPTION MASKS
BONLBT	=18			;BONUS LEVEL BITS
	.PAGE
	.SBTTL	POKY
;
;EQUATES & ADDRESS OFFSETS FOR POKEY CONTROL
;
;
;POKEY WRITE ADDRESSES - THESE ARE OFFSETS FROM THE BASE ADRESS
;
;POKEY 0
AUDF1	=0+POKEY		;AUDIO FREQUENCY, CH1
AUDC1	=1+POKEY		;AUDIO CONTROL, CH1
AUDF2	=2+POKEY		;SAME FOR 3 MORE CHANNELS
AUDC2	=3+POKEY		;CHAN 1-3 FOR SHOT & EXPLOSION
AUDF3	=4+POKEY
AUDC3	=5+POKEY
AUDF4	=6+POKEY		;SCRAPE SOUND
AUDC4	=7+POKEY
AUDCTL	=8+POKEY		;AUDIO CONTROL
AUDF11	=0+POKEY1		;FOR MOTOR SOUND
AUDF21	=2+POKEY1		;FOR MOTOR SOUND (TOGETHER FOR SHIELD)
AUDF31	=4+POKEY1		;FOR LASER WARNING SOUND
AUDF41	=6+POKEY1		;FOR BONUS SOUND & SHIELD OUT SOUND
AUDC11	=1+POKEY1
AUDC21	=3+POKEY1
AUDC31	=5+POKEY1
AUDC41	=7+POKEY1
AUDCT1	=8+POKEY1
;
;AUDCTL (AUDIO CONTROL)
;THIS ADDRESS WRITES DATA INTO THE AUDIO MODE CONTOL REG.
;EACH BIT CONTROLS A FUNCTION
;D7=	CHANGE 17 BIT POLY INTO A 9 BIT POLY.
;D6=	CLOCK CH1 WITH 1.79 MHZ INSTEAD OF 64 KHZ (NOTE 3)
;D5=	CLOCK CH3 WITH 1.79 MHZ INSTEAD OF 64 KHZ (NOTE 3)
;D4=	CLOCK CH2 WITH CH1 INSTEAD OF 64 KHZ (16 BIT COUNTER) (NOTE 3)
;D3=	CLOCK CH4 WITH CH3 INSTEAD OF 64 KHZ (16 BIT COUNTER) (NOTE 3)
;D2=	INSERT HI PASS FILTER IN CH1, CLOCKED BY CH3
;D1=	INSERT HI PASS FILTER IN CH2, CLOCKED BY CH4
;00=	CHANGE NORMAL 64 KHZ FREQ INTO 15 KHZ (NOTE 3)
;EXACT FREQUENCIES: 1.79 MHZ IS 1.78979 MHZ (USE MODIFED FORMULA FOR FOUT)
;		    64 KHZ IS 63.9210 KHZ (NORMAL FORMULA FOR FOUT)
;		    15 KHZ IS 15.6999 KHZ (NORMAL FORMULA FOR FOUT)
;**SEE NOTE 3 **
;THE NORMAL FORMULA FOR FOUT IS: FOUT=FIN/2N WHERE N=AUDF+1
;THE MODIFED FORMULA FOR FOUT IS: FOUT=FIN/(2(AUDF+M))WHERE
;		    M=4 IF 8 BIT COUNTER(AUDCTL D3 & D4 =0)
;		    M=7 IF 16 BIT COUNTER(AUDCTL (D3 & D4=1)
;FOUT=	OUTPUT FREQUENCY
;
;AUDF1,AUDF2,AUDF3,AUDF4 (AUDIO FREQUENCY)
;THESE ADDRESSES WRITE DATA INTO EACH OF THE 4 AUDIO FREQUENCY CONTROL
;REGISTERS.  EACH REG. CONTROLS A DIVIDE BY 'N' COUNTER.
;REGISTER=N-1, I.E. IF REGISTER=0, N=1.
;
;AUDC1,AUDC2,AUDC3,AUDC4 (AUDIO CHANNEL CONTROL)
;THESE ADDRESSES WRITE DATA INTO EACH OF THE 4 AUDIO CONTROL REGISTERS.
;EACH REGISTER CONTROLS THE NOISE CONTENT & VOLUME OF THE CORRESPONDING
;AUDIO CHANNEL. (N CORRESPONDS TO N ABOVE)

;D7    D6    D5    D4    D3    D2    D1    D0		FUNCTION
;
;0     0     0     0				17 BIT POLY/5BIT POLY/N
;0     0     1     0				5 BIT POLY/N/2
;0     1     0     0				4 BIT POLY/5 BIT POLY/N
;0     1     1     0				5 BIT POLY/N/2
;1     0     0     0				17 BIT POLY/N
;1     X     1     0				PURE TONE/N/2
;1     1     0     0				4 BIT POLY/N
;X     X     X     1				FORCE OUTPUT-VOLUME ONLY
;		   X     0     0     0     0	LOWEST VOLUME (OFF)
;						THRU
;		   X     1     1     1     1	HIGHEST VOLUME
STIMER	=09+POKEY		;THIS ADDRESS RESETS ALL AUDIO FREQ
STIMR =9+POKEY1
;DIVIDERS TO THEIR 'AUDF' VALUE.  1 & 3 RESTART HIGH, 2 & 4 RESTART LOW

POTGO	=0B+POKEY		;THIS ADDRESS STARTS THE POT SCAN SEQUENCE
POTGO1 =0B+POKEY1
;THE POT VALUES SHOULD BE READ FIRST.  THIS WRITE STROBE IS THEN USED
;CAUSING THE FOLLOWING SEQUENCE:
;	1)  SCAN COUNTER 0; 2)  CAP DUMP XSTR TURNED OFF; 3)  SCAN COUNTER
;	BEGINS COUNTING; 4)  COUNTER VALUE WILL BE CAPTURED IN EACH OF 8
;	REGISTERS AS EACH POT LINE CROSSES TRIGGER VOLTAGE; 5)  COUNTER
;	REACHES 228, CAP DUMP TRANSISTER TURNED ON.
;	SEE NOTE 1, NOTE 2

IRQEN	=0E+POKEY		;WRITES TO THE IRQ INTERRUPTS ENABLE BITS. WRITE TO 0
;TO TURN OFF MY TIMER INTERRUPTS

SKCTL	=0F+POKEY		;WRITES TO SERIAL OUTPUT PORT CONFIGURATION REGISTER
SKCTL1 =0F+POKEY1
;NOTE*** MUST STORE A 03 TO THIS REG. TO START CHIP RUNNING
;
;READ ADDRESSES
;
POT0	=0+POKEY		;READ POT REG 0
POT1	=1+POKEY
ALLPOT	=08+POKEY		;READ 8 LINE POT PORT STATE
ALLPT1 =8+POKEY1
RANDOM	=0A+POKEY		;RANDOM NUMB GENERATOR
RANDM1 =0A+POKEY1
;******** SPECIAL MOTES *********
;NOTE1:	THE ASSUMED CLOCK RATE FOR PHASE 2 (FOR POKEY) IS
;1.79 MHZ. THIS MEANS THAT ON ANY SYSTEM WITH A SLOWER
;CLOCK WILL HAVE A LONGER 'POT SCAN FRAME TIME' THAN THE
;ACTUAL FRAME TIME.
;EX: ON TUBE CHASE, CLOCK SPEED IS 1.5 MHZ. THEREFORE, A POT
;SCAN "FRAME TIME" IS 17.2 MSEC, LONGER THAN 1 FRAME.
;NOTE2:	POTGO WILL NOT RESTART THE POT SEQUENCE BEFORE
;1 'POT SCAN FRAME TIME' HAS PASSED (IE=17.2 MSEC ON TUBE CHASE).
;
;NOTE3:	1.79 MHZ REFERS TO CONSUMERS PHASE 2 CLOCK FREQUENCY
;YOU MUST SUBSTITUTE YOUR OWN PHASE 2 CLOCK FREQUENCY HERE.  ALSO, 64 KHZ
;AND 15 KHZ ARE ACTUALLY JUST FRACTIONAL PARTS OF PHASE 2.  THEY WILL ALSO
;CHANGE WITH DIFFERENT PHASE 2'S.  DERIVE THEM SIMILAR TO BELOW:
;	64 KHZ = (PHASE 2)/2.8 (WHEN PHASE 2 = 1.79 MHZ)
;	15 KHZ = (PHASE 2)/11.4(WHEN PHASE 2 = 1.79 MHZ)
	.PAGE
;
;*****************************************************
;******* GLOBL STATEMENTS ******************************
;*******************************************************
;
	.GLOBL	SHPTBL,B.OFF,BRTTBL,TARTBL
;
;SOUND ROUTINE NEEDED GLOBLS
;
;ENTRY POINTS (ALL ARE SUBROUTINES)
	.GLOBL STSOUND,CSOUND
	.GLOBL SECTIONS
	.CSECT
                                                                                                                                                                                                                                                                                                                                                                                                                                         